/*SETTINGS BELOW THIS LINE*/const int MAX_SHIFT = 5400; //If we hit this RPM Ignore everything and shift up (Also uses this if you loose sensor readings)const int basePressure = 155; //The pressure we shift at if the Pressure Adjust potentiometer is eith not hooked up or is turned all the way down (Too low can cause transmission to slip)const int baseShiftUp = 2500; //What RPM do we normally shift up at?const int baseShiftDown = 1500; // What RPM do we normally shift down at?const int Cylinders = 8; /*DO NOT EDIT BELOW THIS LINE (Unless you know what your editing)*/const int SOL_A = 3;const int SOL_B = 4;const int TCC = 5;const int PCS = 6;const int M_TCC = 7;const int M_UP = 8;const int M_DOWN = 9;const int LED1 = 2;const int LED2 = 10;const int LED3 = 11;const int LED4 = 12;const int TACH = 13;/* There is just no point in editing these unless your writing your own firmware */int crpm = 0;int gear = 1;int prs = 255;int tccv = 0;bool Manual = false;bool debug = false;bool error = false;int ecode = 0; //Code 11 is base shifts incorrectfloat pls = 10;float ppms = 0;float pps = 0;float ppm = 0;float rpm = 0;float ms = 0;float pms = 0;int ppr = Cylinders / 2;int prsdj = 1;int prsa = 0;int prsadj = 0;void setup() {    pinMode(SOL_A, OUTPUT);    pinMode(SOL_B, OUTPUT);    pinMode(TCC, OUTPUT);    pinMode(PCS, OUTPUT);    pinMode(LED1, OUTPUT);    pinMode(LED2, OUTPUT);    pinMode(LED3, OUTPUT);    pinMode(LED4, OUTPUT);        pinMode(M_UP, INPUT);    pinMode(M_DOWN, INPUT);    pinMode(M_TCC, INPUT);    pinMode(TACH, INPUT);      prs = basePressure;        if (baseshiftDown >= baseshiftUp) {      error = true;      ecode = 11;    }else if (M_TCC) {      error = true;      ecode = 12;    }else if (M_UP) {      error = true;      ecode = 13;    }else if (M_DOWN) {      error = true;      ecode = 14;    }else if (basePressure <= 80) {      error = true;      ecode = 21;    }}void loop() {  if (error) {    if (ecode == 11) {      digitalWrite(LED1, HIGH);      delay(500);      digitalWrite(LED1, LOW);      delay(3000);      return;    }else if (ecode == 12) {      digitalWrite(LED1, HIGH);      digitalWrite(LED2, HIGH);      delay(500);      digitalWrite(LED1, LOW);      digitalWrite(LED2, LOW);      delay(3000);      return;    }else  if (ecode == 13) {      digitalWrite(LED1, HIGH);      digitalWrite(LED3, HIGH);      delay(500);      digitalWrite(LED1, LOW);      digitalWrite(LED3, LOW);      delay(3000);      return;    }else if (ecode == 14) {      digitalWrite(LED1, HIGH);      digitalWrite(LED4, HIGH);      delay(500);      digitalWrite(LED1, LOW);      digitalWrite(LED4, LOW);      delay(3000);      return;    }else  if (ecode == 23) {      digitalWrite(LED3, HIGH);      digitalWrite(LED2, HIGH);      delay(500);      digitalWrite(LED3, LOW);      digitalWrite(LED2, LOW);      delay(3000);      return;    }  }  pls = pulseIn(TACH, HIGH);  digitalWrite(PCS, prs);  if (digitalRead(A5) == HIGH) {    Manual = true;  }else{    Manual = false;  }  if (Manual) {    if (digitalRead(M_UP)==HIGH) {      if (gear < 4) {        gear = gear + 1;        delay (150);      }    }else if (digitalRead(M_DOWN) == HIGH) {      if (gear >= 2) {        gear = gear - 1;        delay (150);      }    }else if (crpm >= MAX_SHIFT) {            if (gear < 4) {        gear = gear + 1;      }          }  }else{        if (crpm >= baseShiftUp) {      if (gear < 4) {        gear = gear + 1;      }    }else if (crpm >= baseShiftDown) {      if (gear >= 2) {        gear = gear - 1;      }    }else if (gear == 4) {      if ((crpm-250) >= baseShiftDown) {                  if (tccv < 255) {          tccv = tccv + 5;          delay(50);        }              }else if ((crpm-250) <= baseShiftDown && crpm >= baseShiftDown) {                 if (tccv > 5) {          tccv = tccv - 5;          delay(50);        }              }    }        if (!gear == 4) {      if (!digitalRead(M_TCC) == HIGH) {        tccv = 0;      }    }        if (crpm >= MAX_SHIFT) {            if (gear < 4) {        gear = gear + 1;      }          }      }    if (debug) {  Serial.print("pls: ");  Serial.print(pls);  Serial.println();}  ms = pls / 1000;  pms = 1/ms;    ppms = pms; //4.69483if (debug) {  Serial.print("ppms: ");  Serial.print(ppms);  Serial.println();}  pps = ppms * 1000;if (debug) {  Serial.print("pps: ");  Serial.print(pps);  Serial.println();}    ppm = pps * 60;if (debug) {  Serial.print("ppm: ");  Serial.print(ppm);  Serial.println();}    rpm = ppm / ppr;  if (gear == 1) {  digitalWrite(SOL_A, HIGH);  digitalWrite(SOL_B, HIGH);  digitalWrite(LED1, HIGH);  digitalWrite(LED2, LOW);  digitalWrite(LED3, LOW);  digitalWrite(LED4, LOW);}else if (gear == 2) {  digitalWrite(SOL_A, LOW);  digitalWrite(SOL_B, HIGH);  digitalWrite(LED1, HIGH);  digitalWrite(LED2, HIGH);  digitalWrite(LED3, LOW);  digitalWrite(LED4, LOW);}else if (gear == 3) {  digitalWrite(SOL_A, LOW);  digitalWrite(SOL_B, LOW);  digitalWrite(LED1, HIGH);  digitalWrite(LED2, HIGH);  digitalWrite(LED3, HIGH);  digitalWrite(LED4, LOW);}else if (gear == 4) {  digitalWrite(SOL_A, HIGH);  digitalWrite(SOL_B, LOW);  digitalWrite(LED1, HIGH);  digitalWrite(LED2, HIGH);  digitalWrite(LED3, HIGH);  digitalWrite(LED4, HIGH);}else if (gear >= 4) {  gear = 4;}else if (gear < 1) {  gear = 1;}      prsadj = analogRead(A2);  prsa = (prsadj/100)+1;    if (prsa < 1) {    prsa = 1;  }else{    prs = prs*(prsa);    if (debug){      Serial.println("prs: " + prs);      Serial.println("prsa: " + prsa);      Serial.println("prsadj: " + prsadj);      Serial.print("Gear: ");      Serial.print(gear);      Serial.println();    }  }      delay(250);  }//3200 RPM = 53.333 RPS = 213 PPS = .213 PPMS = 0.000213 PP_MICROSEC//1900 RPM = 31.66 RPS = 126.66666 PPS = .126666 PPMS = .0001266